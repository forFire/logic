<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
http://www.springframework.org/schema/tx
http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
http://www.springframework.org/schema/jee
http://www.springframework.org/schema/jee/spring-jee-3.1.xsd
http://www.springframework.org/schema/aop
http://www.springframework.org/schema/aop/spring-aop-3.1.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.1.xsd">

	<bean id="dataSourceMaster" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="${master.db.url}" />  
        <property name="username" value="${master.db.user}" />  
        <property name="password" value="${master.db.pw}" />  
  		<property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="maxActive" value="${master.db.maxconn}" />  
        <property name="initialSize" value="${master.db.initialSize}" />  
        <property name="maxWait" value="3000" />   
    </bean>

	<bean id="sessionFactoryMaster"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceMaster" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.capcare.harbor.model</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManagerMaster"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryMaster" />
	</bean>	

	<tx:advice id="txAdviceMaster" transaction-manager="transactionManagerMaster">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="saveBean*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>  
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdviceMaster"
			pointcut="execution(* com.capcare.harbor.dao..*.*(..))" />
		<aop:advisor advice-ref="txAdviceMaster"
			pointcut="execution(* module.orm..*.*(..))" />
	</aop:config>
	
	<!-- rd项目添加start -->
	<bean id="dataSourceBeidou" class="com.alibaba.druid.pool.DruidDataSource"
        destroy-method="close">  
        <property name="url" value="${beidou.db.url}" />  
        <property name="username" value="${beidou.db.user}" />  
        <property name="password" value="${beidou.db.pw}" />  
  		<property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="maxActive" value="${beidou.db.maxconn}" />
        <property name="initialSize" value="${beidou.db.initialSize}" />
        <property name="maxWait" value="3000" />
    </bean>

	<bean id="sessionFactoryBeidou"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceBeidou" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.capcare.harbor.model</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManagerBeidou"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactoryBeidou" />
	</bean>

	<tx:advice id="txAdviceBeidou" transaction-manager="transactionManagerBeidou">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="saveBean*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>  
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdviceBeidou"
			pointcut="execution(* com.capcare.harbor.dao..*.*(..))" />
		<aop:advisor advice-ref="txAdviceBeidou"
			pointcut="execution(* module.orm..*.*(..))" />
	</aop:config>	
	<!-- rd项目添加end -->
	
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource"  
        destroy-method="close">  
        <property name="url" value="${db.url}" />  
        <property name="username" value="${db.user}" />  
        <property name="password" value="${db.pw}" />  
  		<property name="driverClassName" value="com.mysql.jdbc.Driver" />  
        <property name="maxActive" value="${db.maxconn}" />  
        <property name="initialSize" value="${db.initialSize}" />  
        <property name="maxWait" value="3000" />   
    </bean>

	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect</prop>
				<prop key="hibernate.jdbc.fetch_size">100</prop>
				<prop key="hibernate.jdbc.batch_size">50</prop>
				<prop key="javax.persistence.validation.mode">none</prop>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate4.SpringSessionContext
				</prop>
			</props>
		</property>
		<property name="packagesToScan">
			<list>
				<value>com.capcare.harbor.model</value>
			</list>
		</property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="saveBean*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="get*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="query*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="count*" propagation="REQUIRED" read-only="true"/>  
            <tx:method name="search*" propagation="REQUIRED" read-only="true"/>  
			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	<aop:config proxy-target-class="true">
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* com.capcare.harbor.dao..*.*(..))" />
		<aop:advisor advice-ref="txAdvice"
			pointcut="execution(* module.orm..*.*(..))" />
	</aop:config>	
</beans>